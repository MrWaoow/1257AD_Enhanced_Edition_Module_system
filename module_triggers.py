# -*- coding: UTF-8 -*-
####################################################################################################################
# Generated by Warband Module Decompiler
# All rights of the module belong to their respective owners
####################################################################################################################

from header_common import *
from header_operations import *
from header_parties import *
from header_items import *
from header_skills import *
from header_triggers import *
from header_troops import *

from module_constants import *

####################################################################################################################
#  Each trigger contains the following fields:
# 1) Check interval: How frequently this trigger will be checked
# 2) Delay interval: Time to wait before applying the consequences of the trigger
#    After its conditions have been evaluated as true.
# 3) Re-arm interval. How much time must pass after applying the consequences of the trigger for the trigger to become active again.
#    You can put the constant ti_once here to make sure that the trigger never becomes active again after it fires once.
# 4) Conditions block (list). This must be a valid operation block. See header_operations.py for reference.
#    Every time the trigger is checked, the conditions block will be executed.
#    If the conditions block returns true, the consequences block will be executed.
#    If the conditions block is empty, it is assumed that it always evaluates to true.
# 5) Consequences block (list). This must be a valid operation block. See header_operations.py for reference. 
####################################################################################################################

triggers = [
  (0.1, 0, ti_once,[
    (map_free, 0),
  ],
  [
    (dialog_box, "str_tutorial_map1"),
  ]),

  (1, 0, 0,[
    (check_quest_active, "qst_track_down_bandits"),
    (neg|check_quest_failed, "qst_track_down_bandits"),
    (neg|check_quest_succeeded, "qst_track_down_bandits"),
  ],
  [
    (quest_get_slot, ":var0", "qst_track_down_bandits", 8),
    (try_begin),
      (party_is_active, ":var0"),
      (store_faction_of_party, ":var1", ":var0"),
      (neg|is_between, ":var1", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (assign, ":var2", 8),
      (try_begin),
        (is_currently_night),
        (assign, ":var2", 5),
      (try_end),
      (try_for_parties, ":var3"),
        (gt, ":var3", "p_spawn_points_end"),
        (store_faction_of_party, ":var4", ":var3"),
        (is_between, ":var4", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (store_distance_to_party_from_party, ":var5", ":var3", ":var0"),
        (lt, ":var5", ":var2"),
        (try_begin),
          (eq, "$cheat_mode", 1),
          (str_store_party_name, s4, ":var3"),
          (display_message, "@{!}DEBUG -- Wanted bandits spotted by {s4}"),
        (try_end),
        (call_script, "script_get_closest_center", ":var0"),
        (assign, ":var6", reg0),
        (call_script, "script_add_log_entry", 70, ":var3", ":var6", ":var0", -1),
      (try_end),
    (else_try),
      (display_message, "str_bandits_eliminated_by_another"),
      (call_script, "script_abort_quest", "qst_track_down_bandits", 0),
    (try_end),
  ]),

  (2, 0, 0,[
    (store_random_party_of_template, reg2, "pt_prisoner_train_party"),
    (party_is_in_any_town, reg2),
  ],
  [
    (store_faction_of_party, ":var0", reg2),
    (call_script, "script_cf_select_random_walled_center_with_faction", ":var0", -1),
    (party_set_ai_behavior, reg2, ai_bhvr_travel_to_party),
    (party_set_ai_object, reg2, reg0),
    (party_set_flags, reg2, pf_default_behavior, 0),
  ]),

  (4, 0, 0,[
    (eq, "$caravan_escort_state", 1),
    (assign, ":var0", 0),
    (try_begin),
      (neg|party_is_active, "$caravan_escort_party_id"),
      (assign, ":var0", 1),
    (else_try),
      (get_party_ai_object, ":var1", "$caravan_escort_party_id"),
      (neq, ":var1", "$caravan_escort_destination_town"),
      (assign, ":var0", 1),
    (try_end),
    (eq, ":var0", 1),
  ],
  [
    (assign, "$caravan_escort_state", 0),
  ]),

  (0.2, 0, 0,[
    (check_quest_active, "qst_incriminate_loyal_commander"),
    (neg|check_quest_concluded, "qst_incriminate_loyal_commander"),
    (quest_slot_eq, "qst_incriminate_loyal_commander", 11, 2),
    (quest_get_slot, ":var0", "qst_incriminate_loyal_commander", 1),
    (quest_get_slot, ":var1", "qst_incriminate_loyal_commander", 8),
    (try_begin),
      (neg|party_is_active, ":var1"),
      (quest_set_slot, "qst_incriminate_loyal_commander", 11, 3),
      (call_script, "script_fail_quest", "qst_incriminate_loyal_commander"),
    (else_try),
      (party_is_in_town, ":var1", ":var0"),
      (remove_party, ":var1"),
      (quest_set_slot, "qst_incriminate_loyal_commander", 11, 3),
      (quest_get_slot, ":var2", "qst_incriminate_loyal_commander", 4),
      (assign, ":var3", 0),
      (try_for_range, ":var4", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var4", 21, 0),
        (neq, ":var4", "$players_kingdom"),
        (neg|quest_slot_eq, "qst_incriminate_loyal_commander", 3, ":var4"),
        (val_add, ":var3", 1),
      (try_end),
      (try_begin),
        (gt, ":var3", 0),
        (store_random_in_range, ":var5", 0, ":var3"),
        (assign, ":var6", -1),
        (try_for_range, ":var4", "fac_player_supporters_faction", "fac_kingdoms_end"),
          (eq, ":var6", -1),
          (faction_slot_eq, ":var4", 21, 0),
          (neq, ":var4", "$players_kingdom"),
          (neg|quest_slot_eq, "qst_incriminate_loyal_commander", 3, ":var4"),
          (val_sub, ":var5", 1),
          (lt, ":var5", 0),
          (assign, ":var6", ":var4"),
        (try_end),
      (try_end),
      (try_begin),
        (gt, ":var6", 0),
        (call_script, "script_change_troop_faction", ":var2", ":var6"),
      (else_try),
        (call_script, "script_change_troop_faction", ":var2", "fac_robber_knights"),
      (try_end),
      (call_script, "script_succeed_quest", "qst_incriminate_loyal_commander"),
    (try_end),
  ],
  []),

  (0.2, 0, 0,[
    (check_quest_active, "qst_bring_back_runaway_serfs"),
    (neg|check_quest_concluded, "qst_bring_back_runaway_serfs"),
    (quest_get_slot, ":var0", "qst_bring_back_runaway_serfs", 7),
    (quest_get_slot, ":var1", "qst_bring_back_runaway_serfs", 1),
    (try_begin),
      (party_is_active, "$qst_bring_back_runaway_serfs_party_1"),
      (try_begin),
        (party_is_in_town, "$qst_bring_back_runaway_serfs_party_1", ":var1"),
        (remove_party, "$qst_bring_back_runaway_serfs_party_1"),
        (val_add, "$qst_bring_back_runaway_serfs_num_parties_fleed", 1),
      (else_try),
        (party_is_in_town, "$qst_bring_back_runaway_serfs_party_1", ":var0"),
        (remove_party, "$qst_bring_back_runaway_serfs_party_1"),
        (val_add, "$qst_bring_back_runaway_serfs_num_parties_returned", 1),
      (else_try),
        (store_distance_to_party_from_party, ":var2", "p_main_party", "$qst_bring_back_runaway_serfs_party_1"),
        (gt, ":var2", 3),
        (party_set_ai_object, "$qst_bring_back_runaway_serfs_party_1", ":var1"),
      (try_end),
    (try_end),
    (try_begin),
      (party_is_active, "$qst_bring_back_runaway_serfs_party_2"),
      (try_begin),
        (party_is_in_town, "$qst_bring_back_runaway_serfs_party_2", ":var1"),
        (remove_party, "$qst_bring_back_runaway_serfs_party_2"),
        (val_add, "$qst_bring_back_runaway_serfs_num_parties_fleed", 1),
      (else_try),
        (party_is_in_town, "$qst_bring_back_runaway_serfs_party_2", ":var0"),
        (remove_party, "$qst_bring_back_runaway_serfs_party_2"),
        (val_add, "$qst_bring_back_runaway_serfs_num_parties_returned", 1),
      (else_try),
        (store_distance_to_party_from_party, ":var2", "p_main_party", "$qst_bring_back_runaway_serfs_party_2"),
        (gt, ":var2", 3),
        (party_set_ai_object, "$qst_bring_back_runaway_serfs_party_2", ":var1"),
      (try_end),
    (try_end),
    (try_begin),
      (party_is_active, "$qst_bring_back_runaway_serfs_party_3"),
      (try_begin),
        (party_is_in_town, "$qst_bring_back_runaway_serfs_party_3", ":var1"),
        (remove_party, "$qst_bring_back_runaway_serfs_party_3"),
        (val_add, "$qst_bring_back_runaway_serfs_num_parties_fleed", 1),
      (else_try),
        (party_is_in_town, "$qst_bring_back_runaway_serfs_party_3", ":var0"),
        (remove_party, "$qst_bring_back_runaway_serfs_party_3"),
        (val_add, "$qst_bring_back_runaway_serfs_num_parties_returned", 1),
      (else_try),
        (store_distance_to_party_from_party, ":var2", "p_main_party", "$qst_bring_back_runaway_serfs_party_3"),
        (gt, ":var2", 3),
        (party_set_ai_object, "$qst_bring_back_runaway_serfs_party_3", ":var1"),
      (try_end),
    (try_end),
    (assign, ":var3", "$qst_bring_back_runaway_serfs_num_parties_returned"),
    (val_add, ":var3", "$qst_bring_back_runaway_serfs_num_parties_fleed"),
    (ge, ":var3", 3),
    (try_begin),
      (ge, "$qst_bring_back_runaway_serfs_num_parties_returned", 3),
      (call_script, "script_succeed_quest", "qst_bring_back_runaway_serfs"),
    (else_try),
      (eq, "$qst_bring_back_runaway_serfs_num_parties_returned", 0),
      (call_script, "script_fail_quest", "qst_bring_back_runaway_serfs"),
    (else_try),
      (call_script, "script_conclude_quest", "qst_bring_back_runaway_serfs"),
    (try_end),
  ],
  []),

  (0.5, 0, 0,[
    (check_quest_active, "qst_follow_spy"),
    (eq, "$qst_follow_spy_no_active_parties", 0),
    (quest_get_slot, ":var0", "qst_follow_spy", 12),
    (quest_get_slot, ":var1", "qst_follow_spy", 7),
    (assign, ":var2", 0),
    (try_begin),
      (this_or_next|ge, "$qst_follow_spy_run_away", 2),
      (neg|this_or_next|party_is_active, "$qst_follow_spy_spy_party"),
      (neg|party_is_active, "$qst_follow_spy_spy_partners_party"),
    (else_try),
      (eq, "$qst_follow_spy_meeting_state", 0),
      (store_distance_to_party_from_party, ":var3", "p_main_party", "$qst_follow_spy_spy_party"),
      (try_begin),
        (assign, ":var4", 3),
        (try_begin),
          (is_currently_night),
          (assign, ":var4", 1),
        (try_end),
        (le, ":var3", ":var4"),
        (store_distance_to_party_from_party, ":var5", "p_main_party", ":var0"),
        (gt, ":var5", 1),
        (val_add, "$qst_follow_spy_run_away", 1),
        (try_begin),
          (eq, "$qst_follow_spy_run_away", 2),
          (assign, ":var2", 1),
          (display_message, "str_qst_follow_spy_noticed_you"),
        (try_end),
      (else_try),
        (store_distance_to_party_from_party, ":var3", "$qst_follow_spy_spy_partners_party", "$qst_follow_spy_spy_party"),
        (le, ":var3", 1),
        (party_attach_to_party, "$qst_follow_spy_spy_party", "$qst_follow_spy_spy_partners_party"),
        (assign, "$qst_follow_spy_meeting_state", 1),
        (assign, "$qst_follow_spy_meeting_counter", 0),
      (try_end),
    (else_try),
      (eq, "$qst_follow_spy_meeting_state", 1),
      (store_distance_to_party_from_party, ":var3", "p_main_party", "$qst_follow_spy_spy_partners_party"),
      (try_begin),
        (le, ":var3", 1),
        (party_detach, "$qst_follow_spy_spy_party"),
        (val_add, "$qst_follow_spy_run_away", 1),
        (try_begin),
          (eq, "$qst_follow_spy_run_away", 2),
          (assign, ":var2", 1),
          (display_message, "str_qst_follow_spy_noticed_you"),
        (try_end),
      (else_try),
        (val_add, "$qst_follow_spy_meeting_counter", 1),
        (gt, "$qst_follow_spy_meeting_counter", 4),
        (party_detach, "$qst_follow_spy_spy_party"),
        (assign, ":var2", 1),
        (assign, "$qst_follow_spy_meeting_state", 2),
      (try_end),
    (try_end),
    (try_begin),
      (eq, ":var2", 1),
      (party_set_ai_object, "$qst_follow_spy_spy_party", ":var0"),
      (party_set_ai_object, "$qst_follow_spy_spy_partners_party", ":var1"),
      (party_set_ai_behavior, "$qst_follow_spy_spy_party", ai_bhvr_travel_to_party),
      (party_set_ai_behavior, "$qst_follow_spy_spy_partners_party", ai_bhvr_travel_to_party),
      (party_set_flags, "$qst_follow_spy_spy_party", pf_default_behavior, 0),
      (party_set_flags, "$qst_follow_spy_spy_partners_party", pf_default_behavior, 0),
    (try_end),
    (assign, ":var6", 0),
    (try_begin),
      (party_is_active, "$qst_follow_spy_spy_party"),
      (val_add, ":var6", 1),
      (party_is_in_town, "$qst_follow_spy_spy_party", ":var0"),
      (remove_party, "$qst_follow_spy_spy_party"),
      (assign, "$qst_follow_spy_spy_back_in_town", 1),
      (val_sub, ":var6", 1),
    (try_end),
    (try_begin),
      (party_is_active, "$qst_follow_spy_spy_partners_party"),
      (val_add, ":var6", 1),
      (party_is_in_town, "$qst_follow_spy_spy_partners_party", ":var1"),
      (remove_party, "$qst_follow_spy_spy_partners_party"),
      (assign, "$qst_follow_spy_partner_back_in_town", 1),
      (val_sub, ":var6", 1),
    (try_end),
    (try_begin),
      (eq, "$qst_follow_spy_partner_back_in_town", 1),
      (eq, "$qst_follow_spy_spy_back_in_town", 1),
      (call_script, "script_fail_quest", "qst_follow_spy"),
    (try_end),
    (try_begin),
      (eq, ":var6", 0),
      (assign, "$qst_follow_spy_no_active_parties", 1),
      (party_count_prisoners_of_type, ":var7", "p_main_party", "trp_spy"),
      (party_count_prisoners_of_type, ":var8", "p_main_party", "trp_spy_partner"),
      (gt, ":var7", 0),
      (gt, ":var8", 0),
      (call_script, "script_succeed_quest", "qst_follow_spy"),
    (try_end),
  ],
  []),

  (168, 0, 0,[],
  [
    (val_mul, "$debt_to_merchants_guild", 101),
    (val_div, "$debt_to_merchants_guild", 100),
  ]),

  (0.1, 0, 0.1,[
    (check_quest_active, "qst_escort_merchant_caravan"),
    (eq, "$escort_merchant_caravan_mode", 1),
  ],
  [
    (quest_get_slot, ":var0", "qst_escort_merchant_caravan", 8),
    (try_begin),
      (party_is_active, ":var0"),
      (party_set_ai_behavior, ":var0", ai_bhvr_hold),
      (party_set_flags, ":var0", pf_default_behavior, 0),
    (try_end),
  ]),

  (0.1, 0, 0.1,[
    (check_quest_active, "qst_escort_merchant_caravan"),
    (eq, "$escort_merchant_caravan_mode", 0),
  ],
  [
    (quest_get_slot, ":var0", "qst_escort_merchant_caravan", 8),
    (try_begin),
      (party_is_active, ":var0"),
      (party_set_ai_behavior, ":var0", ai_bhvr_escort_party),
      (party_set_flags, ":var0", pf_default_behavior, 0),
      (party_set_ai_object, ":var0", "p_main_party"),
    (try_end),
  ]),

  (0.1, 0, 0,[
    (check_quest_active, "qst_escort_merchant_caravan"),
    (quest_get_slot, ":var0", "qst_escort_merchant_caravan", 8),
    (neg|party_is_active, ":var0"),
  ],
  [
    (call_script, "script_abort_quest", "qst_escort_merchant_caravan", 2),
  ]),

  (0.3, 0, 1.1,[
    (check_quest_active, "qst_troublesome_bandits"),
    (neg|check_quest_failed, "qst_troublesome_bandits"),
    (store_num_parties_destroyed, ":var0", "pt_troublesome_bandits"),
    (lt, "$qst_troublesome_bandits_eliminated", ":var0"),
    (store_num_parties_destroyed_by_player, ":var1", "pt_troublesome_bandits"),
    (eq, ":var1", "$qst_troublesome_bandits_eliminated_by_player"),
  ],
  [
    (display_message, "str_bandits_eliminated_by_another"),
    (call_script, "script_abort_quest", "qst_troublesome_bandits", 2),
  ]),

  (0.3, 0, 1.1,[
    (check_quest_active, "qst_troublesome_bandits"),
    (neg|check_quest_succeeded, "qst_troublesome_bandits"),
    (store_num_parties_destroyed, ":var0", "pt_troublesome_bandits"),
    (lt, "$qst_troublesome_bandits_eliminated", ":var0"),
    (store_num_parties_destroyed_by_player, ":var1", "pt_troublesome_bandits"),
    (neq, ":var1", "$qst_troublesome_bandits_eliminated_by_player"),
  ],
  [
    (call_script, "script_succeed_quest", "qst_troublesome_bandits"),
  ]),

  (1, 0, 0,[
    (check_quest_active, "qst_kidnapped_girl"),
    (quest_get_slot, ":var0", "qst_kidnapped_girl", 8),
    (party_is_active, ":var0"),
    (party_is_in_any_town, ":var0"),
    (remove_party, ":var0"),
  ],
  []),

  (0, 0, 336,[],
  []),

  (360, 0, 0,[
    (call_script, "script_update_companion_candidates_in_taverns"),
  ],
  []),

  (0, 0, 24,[],
  [
    (assign, ":var0", 0),
    (assign, ":var1", 100),
    (try_for_range, ":var2", "trp_npc1", "trp_kingdom_1_lord"),
      (main_party_has_troop, ":var2"),
      (val_add, ":var0", 1),
    (try_end),
    (val_sub, ":var1", ":var0"),
    (store_skill_level, ":var3", "skl_persuasion", "trp_player"),
    (val_add, ":var1", ":var3"),
    (assign, reg7, ":var1"),
    (try_begin),
      (gt, "$personality_clash_after_24_hrs", 0),
      (eq, "$disable_npc_complaints", 0),
      (try_begin),
        (troop_get_slot, ":var4", "$personality_clash_after_24_hrs", 71),
        (main_party_has_troop, "$personality_clash_after_24_hrs"),
        (main_party_has_troop, ":var4"),
        (assign, "$npc_with_personality_clash", "$personality_clash_after_24_hrs"),
      (try_end),
      (assign, "$personality_clash_after_24_hrs", 0),
    (try_end),
    (try_for_range, ":var5", "trp_npc1", "trp_kingdom_1_lord"),
      (troop_set_slot, ":var5", 81, 0),
      (try_begin),
        (troop_slot_eq, ":var5", 5, 1),
        (troop_set_slot, ":var5", 80, 1),
      (try_end),
      (troop_get_slot, ":var6", ":var5", 2),
      (try_begin),
        (eq, ":var6", 11),
        (troop_get_slot, ":var7", ":var5", 84),
        (str_store_troop_name, s31, ":var5"),
        (troop_get_slot, ":var8", "trp_player", 7),
        (assign, reg4, ":var8"),
        (assign, reg5, ":var7"),
        (gt, ":var8", ":var7"),
        (troop_set_slot, ":var5", 77, 0),
        (troop_set_slot, ":var5", 69, 0),
        (troop_set_slot, ":var5", 2, 0),
      (try_end),
      (try_begin),
        (troop_slot_ge, ":var5", 151, 5),
        (troop_slot_eq, ":var5", 152, 1),
        (troop_get_slot, ":var4", ":var5", 144),
        (troop_slot_eq, ":var4", 145, 0),
        (troop_set_slot, ":var4", 145, 1),
        (str_store_troop_name, s3, ":var5"),
        (str_store_troop_name, s4, ":var4"),
        (try_begin),
          (eq, "$cheat_mode", 1),
          (display_message, "str_s4_ready_to_voice_objection_to_s3s_mission_if_in_party"),
        (try_end),
      (try_end),
      (try_begin),
        (main_party_has_troop, ":var5"),
        (eq, "$disable_npc_complaints", 0),
        (call_script, "script_npc_morale", ":var5"),
        (assign, ":var9", reg0),
        (try_begin),
          (lt, ":var9", 20),
          (store_random_in_range, ":var10", 0, 100),
          (val_add, ":var9", ":var10"),
          (lt, ":var9", 20),
          (assign, "$npc_is_quitting", ":var5"),
        (try_end),
        (troop_get_slot, ":var11", ":var5", 77),
        (val_mul, ":var11", 90),
        (val_div, ":var11", ":var1"),
        (troop_set_slot, ":var5", 77, ":var11"),
        (troop_get_slot, ":var11", ":var5", 69),
        (val_mul, ":var11", 90),
        (val_div, ":var11", ":var1"),
        (troop_set_slot, ":var5", 69, ":var11"),
        (try_begin),
          (this_or_next|troop_slot_ge, ":var5", 72, 1),
          (eq, "$disable_npc_complaints", 1),
          (troop_get_slot, ":var12", ":var5", 71),
          (main_party_has_troop, ":var12"),
          (call_script, "script_reduce_companion_morale_for_clash", ":var5", ":var12", 72),
        (try_end),
        (try_begin),
          (this_or_next|troop_slot_ge, ":var5", 74, 1),
          (eq, "$disable_npc_complaints", 1),
          (troop_get_slot, ":var12", ":var5", 73),
          (main_party_has_troop, ":var12"),
          (call_script, "script_reduce_companion_morale_for_clash", ":var5", ":var12", 74),
        (try_end),
        (try_begin),
          (this_or_next|troop_slot_ge, ":var5", 76, 1),
          (eq, "$disable_npc_complaints", 1),
          (troop_get_slot, ":var12", ":var5", 75),
          (main_party_has_troop, ":var12"),
          (troop_get_slot, ":var11", ":var5", 77),
          (val_mul, ":var11", 9),
          (val_div, ":var11", 10),
          (troop_set_slot, ":var5", 77, ":var11"),
        (try_end),
        (try_begin),
          (eq, "$disable_npc_complaints", 0),
          (eq, "$npc_with_personality_clash", 0),
          (eq, "$npc_with_personality_clash_2", 0),
          (eq, "$personality_clash_after_24_hrs", 0),
          (troop_slot_eq, ":var5", 72, 0),
          (troop_get_slot, ":var4", ":var5", 71),
          (main_party_has_troop, ":var4"),
          (assign, "$personality_clash_after_24_hrs", ":var5"),
        (try_end),
        (try_begin),
          (eq, "$npc_with_political_grievance", 0),
          (troop_slot_eq, ":var5", 145, 1),
          (assign, "$npc_with_political_grievance", ":var5"),
        (try_end),
      (else_try),
        (neg|main_party_has_troop, ":var5"),
        (eq, ":var6", 5),
        (troop_get_slot, ":var13", ":var5", 151),
        (try_begin),
          (eq, "$cheat_mode", 1),
          (str_store_troop_name, s10, ":var5"),
          (assign, reg0, ":var13"),
          (display_message, "@Checking rejoin of {s10} days on mission: {reg0}"),
        (try_end),
        (try_begin),
          (gt, ":var13", 0),
          (val_sub, ":var13", 1),
          (troop_set_slot, ":var5", 151, ":var13"),
        (else_try),
          (troop_slot_eq, ":var5", 152, 12),
          (troop_slot_ge, ":var5", 156, 1),
          (troop_set_slot, "trp_merc_euro_spearman", 153, ":var5"),
          (assign, "$npc_to_rejoin_party", "trp_merc_euro_spearman"),
        (else_try),
          (troop_slot_ge, ":var5", 152, 1),
          (neg|this_or_next|troop_slot_eq, ":var5", 152, 8),
          (hero_can_join, ":var5"),
          (assign, "$npc_to_rejoin_party", ":var5"),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (0.75, 0, 0,[
    (eq, "$tom_use_longships", 1),
  ],
  [
    (try_for_parties, ":var0"),
      (neg|is_between, "p_town_1_1", "p_salt_mine"),
      (party_get_template_id, ":var1", ":var0"),
      (neq, ":var1", "pt_manor"),
      (gt, ":var1", 0),
      (party_get_icon, ":var2", ":var0"),
      (try_begin),
        (call_script, "script_cf_is_party_on_water", ":var0"),
        (neg|is_between, ":var2", "icon_longship", "icon_crusaders"),
        (neg|is_between, ":var2", "icon_italy_new_a", "icon_bandit_marker"),
        (try_begin),
          (party_slot_eq, ":var0", 600, 0),
          (party_set_slot, ":var0", 600, ":var2"),
        (try_end),
        (store_faction_of_party, ":var3", ":var0"),
        (try_begin),
          (eq, ":var3", "fac_kingdom_5"),
          (party_set_icon, ":var0", "icon_longship_poland"),
        (else_try),
          (eq, ":var3", "fac_kingdom_1"),
          (party_set_icon, ":var0", "icon_longship_teu"),
        (else_try),
          (eq, ":var3", "fac_kingdom_2"),
          (party_set_icon, ":var0", "icon_longship_lithuania"),
        (else_try),
          (eq, ":var3", "fac_kingdom_3"),
          (party_set_icon, ":var0", "icon_longship_mongol"),
        (else_try),
          (eq, ":var3", "fac_kingdom_4"),
          (party_set_icon, ":var0", "icon_longship_denmark"),
        (else_try),
          (eq, ":var3", "fac_kingdom_6"),
          (party_set_icon, ":var0", "icon_longship_hre"),
        (else_try),
          (eq, ":var3", "fac_kingdom_7"),
          (party_set_icon, ":var0", "icon_longship_hungary"),
        (else_try),
          (eq, ":var3", "fac_kingdom_8"),
          (party_set_icon, ":var0", "icon_longship_novgorod"),
        (else_try),
          (eq, ":var3", "fac_kingdom_9"),
          (party_set_icon, ":var0", "icon_longship_england"),
        (else_try),
          (eq, ":var3", "fac_kingdom_10"),
          (party_set_icon, ":var0", "icon_longship_france"),
        (else_try),
          (eq, ":var3", "fac_kingdom_11"),
          (party_set_icon, ":var0", "icon_longship_norway"),
        (else_try),
          (eq, ":var3", "fac_kingdom_12"),
          (party_set_icon, ":var0", "icon_longship_scotland"),
        (else_try),
          (eq, ":var3", "fac_kingdom_13"),
          (party_set_icon, ":var0", "icon_longship_ireland"),
        (else_try),
          (eq, ":var3", "fac_kingdom_14"),
          (party_set_icon, ":var0", "icon_longship_sweden"),
        (else_try),
          (eq, ":var3", "fac_kingdom_15"),
          (party_set_icon, ":var0", "icon_longship_galicia"),
        (else_try),
          (eq, ":var3", "fac_kingdom_16"),
          (party_set_icon, ":var0", "icon_longship_portugal"),
        (else_try),
          (eq, ":var3", "fac_kingdom_17"),
          (party_set_icon, ":var0", "icon_longship_aragon"),
        (else_try),
          (eq, ":var3", "fac_kingdom_18"),
          (party_set_icon, ":var0", "icon_longship_castile"),
        (else_try),
          (eq, ":var3", "fac_kingdom_19"),
          (party_set_icon, ":var0", "icon_longship_navarra"),
        (else_try),
          (eq, ":var3", "fac_kingdom_20"),
          (party_set_icon, ":var0", "icon_longship_granada"),
        (else_try),
          (eq, ":var3", "fac_papacy"),
          (party_set_icon, ":var0", "icon_longship_papal"),
        (else_try),
          (eq, ":var3", "fac_kingdom_22"),
          (party_set_icon, ":var0", "icon_longship_byzantine"),
        (else_try),
          (eq, ":var3", "fac_kingdom_23"),
          (party_set_icon, ":var0", "icon_longship_jerusalem"),
        (else_try),
          (eq, ":var3", "fac_kingdom_24"),
          (party_set_icon, ":var0", "icon_longship_sicily"),
        (else_try),
          (eq, ":var3", "fac_kingdom_25"),
          (party_set_icon, ":var0", "icon_longship_mamluke"),
        (else_try),
          (eq, ":var3", "fac_kingdom_26"),
          (party_set_icon, ":var0", "icon_longship_latin"),
        (else_try),
          (eq, ":var3", "fac_kingdom_27"),
          (party_set_icon, ":var0", "icon_longship_ilkhanate"),
        (else_try),
          (eq, ":var3", "fac_kingdom_28"),
          (party_set_icon, ":var0", "icon_longship_hafsid"),
        (else_try),
          (eq, ":var3", "fac_kingdom_29"),
          (party_set_icon, ":var0", "icon_longship_serbia"),
        (else_try),
          (eq, ":var3", "fac_kingdom_30"),
          (party_set_icon, ":var0", "icon_longship_bulgaria"),
        (else_try),
          (eq, ":var3", "fac_kingdom_31"),
          (party_set_icon, ":var0", "icon_longship_marinid"),
        (else_try),
          (eq, ":var3", "fac_outlaws"),
          (party_set_icon, ":var0", "icon_longship_pirate"),
        (else_try),
          (party_set_icon, ":var0", "icon_longship"),
        (try_end),
      (else_try),
        (eq, reg0, 0),
        (is_between, ":var2", "icon_longship", "icon_bandit_marker"),
        (neg|party_slot_eq, ":var0", 600, 0),
        (party_get_slot, ":var2", ":var0", 600),
        (party_set_icon, ":var0", ":var2"),
      (try_end),
    (try_end),
  ]),

  (24, 0, 168,[],
  [
    (assign, ":var0", 0),
    (try_for_range, ":var1", "p_town_1_1", "p_village_1_1"),
      (party_get_slot, ":var2", ":var1", 7),
      (eq, ":var2", "trp_player"),
      (assign, ":var0", 1),
    (try_end),
    (eq, ":var0", 1),
    (try_begin),
      (eq, "$cheat_mode", 1),
      (assign, reg0, "$g_player_chamberlain"),
      (display_message, "@{!}DEBUG : chamberlain: {reg0}"),
    (try_end),
    (assign, ":var3", 0),
    (try_begin),
      (eq, "$g_player_chamberlain", 0),
      (assign, ":var3", 1),
    (else_try),
      (neq, "$g_player_chamberlain", -1),
      (neq, "$g_player_chamberlain", "trp_dplmc_chamberlain"),
      (assign, ":var3", 1),
    (try_end),
    (try_begin),
      (eq, ":var3", 1),
      (call_script, "script_add_notification_menu", "mnu_dplmc_notification_appoint_chamberlain", 0, 0),
    (try_end),
  ]),

  (24, 0, 192,[],
  [
    (assign, ":var0", 0),
    (try_for_range, ":var1", "p_town_1_1", "p_village_1_1"),
      (party_get_slot, ":var2", ":var1", 7),
      (eq, ":var2", "trp_player"),
      (assign, ":var0", 1),
    (try_end),
    (eq, ":var0", 1),
    (try_begin),
      (eq, "$cheat_mode", 1),
      (assign, reg0, "$g_player_constable"),
      (display_message, "@{!}DEBUG : constable: {reg0}"),
    (try_end),
    (assign, ":var3", 0),
    (try_begin),
      (eq, "$g_player_constable", 0),
      (assign, ":var3", 1),
    (else_try),
      (neq, "$g_player_constable", -1),
      (neq, "$g_player_constable", "trp_dplmc_constable"),
      (assign, ":var3", 1),
    (try_end),
    (try_begin),
      (eq, ":var3", 1),
      (call_script, "script_add_notification_menu", "mnu_dplmc_notification_appoint_constable", 0, 0),
    (try_end),
  ]),

  (24, 0, 216,[],
  [
    (assign, ":var0", 0),
    (try_for_range, ":var1", "p_town_1_1", "p_village_1_1"),
      (party_get_slot, ":var2", ":var1", 7),
      (eq, ":var2", "trp_player"),
      (assign, ":var0", 1),
    (try_end),
    (eq, ":var0", 1),
    (try_begin),
      (eq, "$cheat_mode", 1),
      (assign, reg0, "$g_player_chancellor"),
      (display_message, "@{!}DEBUG : chancellor: {reg0}"),
    (try_end),
    (assign, ":var3", 0),
    (try_begin),
      (eq, "$g_player_chancellor", 0),
      (assign, ":var3", 1),
    (else_try),
      (neq, "$g_player_chancellor", -1),
      (neq, "$g_player_chancellor", "trp_dplmc_chancellor"),
      (assign, ":var3", 1),
    (try_end),
    (try_begin),
      (eq, ":var3", 1),
      (call_script, "script_add_notification_menu", "mnu_dplmc_notification_appoint_chancellor", 0, 0),
    (try_end),
  ]),

  (1, 96, 0,[
    (eq, "$crusader_state", 0),
    (call_script, "script_diplomacy_start_war_between_kingdoms", "$crusader_faction", "$crusade_target_faction", 1),
    (try_for_range, ":var0", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (neq, ":var0", "$crusader_faction"),
      (try_begin),
        (this_or_next|faction_slot_eq, ":var0", 102, 0),
        (faction_slot_eq, ":var0", 102, 1),
        (set_relation, ":var0", "fac_crusade", 10),
      (else_try),
        (set_relation, ":var0", "fac_crusade", -50),
      (try_end),
    (try_end),
    (assign, ":var1", "p_village_1_1"),
    (try_for_range, ":var2", "p_town_1_1", ":var1"),
      (store_faction_of_party, ":var0", ":var2"),
      (eq, "$crusader_faction", ":var0"),
      (assign, "$crusade_start", ":var2"),
      (store_num_parties_of_template, ":var3", "pt_crusaders"),
      (lt, ":var3", 1),
      (set_spawn_radius, 5),
      (spawn_around_party, "$crusade_start", "pt_crusaders"),
      (assign, ":var4", reg0),
      (assign, "$crusader_party_id", reg0),
      (party_set_ai_behavior, ":var4", ai_bhvr_hold),
      (str_store_party_name_link, s1, ":var2"),
      (str_store_faction_name_link, s2, "$crusade_target_faction"),
      (display_message, "@Crusaders are going to gather near {s1} the start their crusade against {s2}."),
      (assign, ":var2", -1),
      (assign, ":var1", -1),
    (try_end),
  ],
  [
    (try_begin),
      (try_begin),
        (lt, "$crusade_target", 0),
        (try_for_range, ":var0", "p_town_1_1", "p_village_1_1"),
          (store_faction_of_party, ":var1", ":var0"),
          (eq, ":var1", "$crusade_target_faction"),
          (assign, "$crusade_target", ":var0"),
        (try_end),
      (try_end),
      (str_store_faction_name_link, s1, "$crusade_target_faction"),
      (str_store_party_name_link, s2, "$crusade_target"),
      (display_message, "@Crusade against {s1} have started! The target is {s2}."),
      (assign, "$crusader_state", 1),
      (call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
    (try_end),
  ]),

  (1, 0, 0,[
    (eq, "$crusader_state", 0),
    (neq, "$crusader_party_id", -1),
    (party_is_active, "$crusader_party_id"),
  ],
  [
    (try_begin),
      (eq, "$crusader_faction", "fac_player_supporters_faction"),
      (party_get_slot, ":var0", "$crusade_start", 61),
      (faction_get_slot, ":var1", ":var0", 77),
      (faction_get_slot, ":var2", ":var0", 78),
      (faction_get_slot, ":var3", ":var0", 78),
    (else_try),
      (faction_get_slot, ":var1", "$crusader_faction", 77),
      (faction_get_slot, ":var2", "$crusader_faction", 78),
      (faction_get_slot, ":var3", "$crusader_faction", 78),
    (try_end),
    (store_random_in_range, ":var4", 0, 4),
    (try_begin),
      (eq, ":var4", 0),
      (party_add_template, "$crusader_party_id", ":var1"),
    (else_try),
      (eq, ":var4", 1),
      (party_add_template, "$crusader_party_id", ":var2"),
    (else_try),
      (eq, ":var4", 2),
      (party_add_template, "$crusader_party_id", ":var3"),
    (else_try),
      (store_random_in_range, ":var4", 0, 3),
      (try_begin),
        (eq, ":var4", 0),
        (party_add_template, "$crusader_party_id", "pt_teutonic_reinforcements_c"),
      (else_try),
        (eq, ":var4", 1),
        (party_add_template, "$crusader_party_id", "pt_templar_reinforcements_c"),
      (else_try),
        (party_add_template, "$crusader_party_id", "pt_hospitaller_reinforcements_c"),
      (try_end),
    (try_end),
  ]),

  (1, 0, 0,[
    (eq, "$crusader_state", 1),
  ],
  [
    (try_begin),
      (store_num_parties_of_template, ":var0", "pt_crusaders"),
      (lt, ":var0", 1),
      (assign, "$crusader_faction", -5),
      (assign, "$crusader_party_id", -1),
      (assign, "$crusade_start", 0),
      (assign, "$crusade_target", -1),
      (assign, "$crusade_target_faction", 0),
      (assign, "$crusader_party_id", -1),
      (assign, "$crusader_state", -1),
      (display_message, "@Crusaders have been defeated!"),
    (else_try),
      (store_distance_to_party_from_party, ":var1", "$crusader_party_id", "$crusade_target"),
      (lt, ":var1", 3),
      (store_current_hours, ":var2"),
      (party_set_slot, "$crusade_target", 54, "$crusader_party_id"),
      (party_set_slot, "$crusade_target", 64, ":var2"),
      (call_script, "script_update_faction_notes", "$crusade_target_faction"),
      (str_store_party_name_link, s1, "$crusade_target"),
      (display_message, "@Crusaders have reached {s1}!"),
      (assign, "$crusader_state", 2),
    (else_try),
      (ge, ":var1", 3),
      (call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
    (try_end),
  ]),

  (1, 12, 0,[
    (eq, "$crusader_state", 2),
  ],
  [
    (try_begin),
      (store_num_parties_of_template, ":var0", "pt_crusaders"),
      (lt, ":var0", 1),
      (assign, "$crusader_faction", -5),
      (assign, "$crusader_party_id", -1),
      (assign, "$crusade_start", 0),
      (assign, "$crusade_target", -1),
      (assign, "$crusade_target_faction", 0),
      (assign, "$crusader_state", -1),
      (display_message, "@Crusaders have been defeated!"),
    (else_try),
      (store_distance_to_party_from_party, ":var1", "$crusader_party_id", "$crusade_target"),
      (lt, ":var1", 5),
      (call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
      (party_set_ai_behavior, "$crusader_party_id", ai_bhvr_attack_party),
      (party_set_ai_object, "$crusader_party_id", "$crusade_target"),
      (party_set_flags, "$crusader_party_id", pf_default_behavior, 1),
      (party_set_slot, "$crusader_party_id", 8, 1),
      (str_store_party_name_link, s1, "$crusade_target"),
      (display_message, "@Crusaders have besieged {s1}!"),
      (party_set_slot, "$crusade_target", 235, "fac_crusade"),
      (assign, "$crusader_state", 3),
    (else_try),
      (assign, "$crusader_state", 1),
      (party_set_slot, "$crusade_target", 54, "$crusader_party_id"),
      (party_get_slot, ":var2", "$crusade_target", 54),
      (eq, ":var2", "$crusader_party_id"),
      (party_set_slot, "$crusade_target", 54, -1),
    (try_end),
  ]),

  (1, 0, 0,[
    (eq, "$crusader_state", 3),
  ],
  [
    (try_begin),
      (store_num_parties_of_template, ":var0", "pt_crusaders"),
      (lt, ":var0", 1),
      (assign, "$crusader_faction", -5),
      (assign, "$crusader_party_id", -1),
      (assign, "$crusade_start", 0),
      (assign, "$crusade_target", -1),
      (assign, "$crusade_target_faction", 0),
      (assign, "$crusader_party_id", -1),
      (assign, "$crusader_state", -1),
      (display_message, "@Crusaders have been defeated!"),
    (else_try),
      (assign, ":var1", 0),
      (try_for_range, ":var2", "p_town_1_1", "p_village_1_1"),
        (store_faction_of_party, ":var3", ":var2"),
        (eq, ":var3", "fac_crusade"),
        (try_begin),
          (eq, ":var2", "p_town_21_1"),
          (call_script, "script_give_center_to_faction_aux", "p_town_21_1", "fac_papacy"),
          (faction_set_slot, "fac_papacy", 21, 0),
          (faction_set_slot, "fac_papacy", 11, "trp_pope"),
          (call_script, "script_give_center_to_lord", "p_town_21_1", "trp_pope", 1),
          (party_set_slot, "p_town_21_1", 255, 0),
          (assign, ":var1", 1),
        (else_try),
          (eq, ":var2", "p_town_25_5"),
          (call_script, "script_give_center_to_faction_aux", "p_town_25_5", "fac_kingdom_23"),
          (faction_set_slot, "fac_kingdom_23", 21, 0),
          (faction_set_slot, "fac_kingdom_23", 11, "trp_kingdom_23_lord"),
          (call_script, "script_give_center_to_lord", "p_town_25_5", "trp_kingdom_23_lord", 1),
          (party_set_slot, "p_town_25_5", 255, 0),
          (assign, ":var1", 1),
        (else_try),
          (call_script, "script_give_center_to_faction_aux", ":var2", "$crusader_faction"),
          (try_begin),
            (eq, "$players_kingdom", "$crusader_faction"),
            (call_script, "script_give_center_to_lord", ":var2", "trp_player", 1),
          (else_try),
            (call_script, "script_cf_get_random_lord_except_king_with_faction", "$crusader_faction"),
            (gt, reg0, -1),
            (call_script, "script_give_center_to_lord", ":var2", reg0, 1),
          (try_end),
          (assign, ":var1", 1),
        (try_end),
      (try_end),
      (eq, ":var1", 1),
      (party_leave_cur_battle, "$crusader_party_id"),
      (remove_party, "$crusader_party_id"),
      (str_store_party_name_link, s1, "$crusade_target"),
      (display_message, "@Crusade ended successfully! {s1} was captured."),
      (assign, "$crusader_faction", -5),
      (assign, "$crusader_party_id", -1),
      (assign, "$crusade_start", 0),
      (assign, "$crusade_target", -1),
      (assign, "$crusade_target_faction", 0),
      (assign, "$crusader_party_id", -1),
      (assign, "$crusader_state", -1),
    (else_try),
      (neq, "$crusader_party_id", -1),
      (store_faction_of_party, ":var3", "$crusade_target"),
      (neq, ":var3", "$crusade_target_faction"),
      (display_message, "@Crusaders disperse, because someone else conquered the center."),
      (party_leave_cur_battle, "$crusader_party_id"),
      (remove_party, "$crusader_party_id"),
      (assign, "$crusader_faction", -5),
      (assign, "$crusader_party_id", -1),
      (assign, "$crusade_start", 0),
      (assign, "$crusade_target", -1),
      (assign, "$crusade_target_faction", 0),
      (assign, "$crusader_party_id", -1),
      (assign, "$crusader_state", -1),
    (else_try),
      (call_script, "script_party_set_ai_state", "$crusader_party_id", 1, "$crusade_target"),
    (try_end),
  ]),

  (24, 0, 0,[
    (eq, "$crusader_state", -1),
    (store_random_in_range, reg0, 0, 400),
    (lt, reg0, "$g_misc_crusade_daily_chance"),
  ],
  [
    (try_for_range, ":var0", 0, 80),
      (troop_set_slot, "trp_temp_lord", ":var0", -1),
    (try_end),
    (assign, reg0, 0),
    (try_for_range, ":var0", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_slot_eq, ":var0", 21, 0),
      (faction_slot_eq, ":var0", 102, 0),
      (neg|faction_slot_eq, ":var0", 11, 0),
      (troop_set_slot, "trp_temp_lord", reg0, ":var0"),
      (val_add, reg0, 1),
    (try_end),
    (gt, reg0, 0),
    (store_random_in_range, ":var1", 0, reg0),
    (troop_get_slot, ":var0", "trp_temp_lord", ":var1"),
    (assign, "$crusader_state", 0),
    (assign, "$crusader_faction", ":var0"),
    (try_for_range, ":var0", 0, 80),
      (troop_set_slot, "trp_temp_lord", ":var0", -1),
    (try_end),
    (assign, reg0, 0),
    (try_for_range, ":var0", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_slot_eq, ":var0", 21, 0),
      (neg|faction_slot_eq, ":var0", 102, 0),
      (neg|faction_slot_eq, ":var0", 102, 1),
      (troop_set_slot, "trp_temp_lord", reg0, ":var0"),
      (val_add, reg0, 1),
    (try_end),
    (gt, reg0, 0),
    (store_random_in_range, ":var1", 0, reg0),
    (troop_get_slot, ":var0", "trp_temp_lord", ":var1"),
    (assign, "$crusade_target_faction", ":var0"),
  ]),

  (3, 0, 12,[
    (this_or_next|eq, "$g_camp_mode", 1),
    (eq, "$g_town_visit_after_rest", 1),
    (is_currently_night),
  ],
  [
    (display_message, "@Resting at night. Morale increased by 5.", 0x50FF50),
    (party_get_morale, ":var0", "p_main_party"),
    (val_add, ":var0", 5),
    (party_set_morale, "p_main_party", ":var0"),
  ]),

  (1, 0, 0,[
    (store_num_parties_of_template, ":var0", "pt_merc_party"),
    (ge, ":var0", 1),
  ],
  [
    (try_for_parties, ":var0"),
      (party_get_template_id, ":var1", ":var0"),
      (eq, ":var1", "pt_merc_party"),
      (party_set_faction, ":var0", "$players_kingdom"),
      (party_get_slot, ":var2", ":var0", 4),
      (party_get_slot, ":var3", ":var0", 5),
      (try_begin),
        (eq, ":var2", 2),
        (store_distance_to_party_from_party, ":var4", ":var0", ":var3"),
        (try_begin),
          (gt, ":var4", 10),
          (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_point),
          (party_get_position, pos5, ":var3"),
          (party_set_ai_target_position, ":var0", pos5),
        (else_try),
          (party_set_ai_behavior, ":var0", ai_bhvr_patrol_location),
          (party_set_ai_object, ":var0", ":var3"),
          (party_set_ai_patrol_radius, ":var0", 5),
        (try_end),
      (else_try),
        (eq, ":var3", "p_main_party"),
        (party_set_ai_behavior, ":var0", ai_bhvr_escort_party),
        (party_set_ai_object, ":var0", "p_main_party"),
      (try_end),
      (store_party_size_wo_prisoners, ":var5", ":var0"),
      (try_begin),
        (le, ":var5", 10),
        (remove_party, ":var0"),
      (try_end),
    (try_end),
  ]),

  (168, 0, 0,[
    (store_num_parties_of_template, ":var0", "pt_merc_party"),
    (ge, ":var0", 1),
  ],
  [
    (assign, ":var0", -1),
    (assign, ":var1", 0),
    (try_for_parties, ":var2"),
      (party_get_template_id, ":var3", ":var2"),
      (eq, ":var3", "pt_merc_party"),
      (party_get_num_companion_stacks, ":var4", ":var2"),
      (try_for_range, ":var5", 0, ":var4"),
        (party_stack_get_troop_id, ":var6", ":var2", ":var5"),
        (party_stack_get_size, ":var7", ":var2", ":var5"),
        (call_script, "script_game_get_troop_wage", ":var6", 0),
        (val_mul, reg0, ":var7"),
        (val_add, ":var1", reg0),
      (try_end),
      (assign, ":var0", ":var2"),
    (try_end),
    (store_troop_gold, ":var8", "trp_player"),
    (assign, ":var9", 0),
    (try_begin),
      (lt, ":var8", ":var1"),
      (assign, ":var9", 1),
      (assign, ":var1", ":var8"),
      (display_message, "@you do not have enough gold to pay your forces!"),
    (try_end),
    (try_begin),
      (eq, ":var9", 1),
      (neq, ":var0", -1),
      (store_random_in_range, ":var10", 0, 100),
      (lt, ":var10", 30),
      (set_spawn_radius, 1),
      (spawn_around_party, ":var0", "pt_deserters"),
      (assign, ":var11", reg0),
      (party_clear, ":var11"),
      (party_get_num_companion_stacks, ":var4", ":var2"),
      (try_for_range, ":var5", 0, ":var4"),
        (party_stack_get_troop_id, ":var6", ":var0", ":var5"),
        (party_stack_get_size, ":var7", ":var0", ":var5"),
        (party_add_members, ":var11", ":var6", ":var7"),
      (try_end),
      (remove_party, ":var0"),
      (party_set_ai_behavior, ":var11", ai_bhvr_attack_party),
      (party_set_ai_object, ":var11", "p_main_party"),
      (display_message, "@One of your armies have deserted you!"),
    (try_end),
    (troop_remove_gold, "trp_player", ":var1"),
  ]),

  (2, 0, 0,[
    (gt, "$g_party_mongol_camp_rate", 0),
    (store_num_parties_of_template, ":var0", "pt_mongolian_camp"),
    (lt, ":var0", "$g_party_mongol_camp_max"),
    (val_add, "$g_party_mongol_camp_hours_passed", 2),
    (ge, "$g_party_mongol_camp_hours_passed", "$g_party_mongol_camp_rate"),
    (assign, "$g_party_mongol_camp_hours_passed", 0),
  ],
  [
    (try_for_range, ":var0", "p_town_1_1", "p_salt_mine"),
      (party_get_slot, ":var1", ":var0", 257),
      (this_or_next|eq, ":var1", 0),
      (neg|party_is_active, ":var1"),
      (party_set_slot, ":var0", 257, -1),
      (store_faction_of_party, ":var2", ":var0"),
      (faction_slot_eq, ":var2", 10, "fac_culture_mongol"),
      (set_spawn_radius, 5),
      (spawn_around_party, ":var0", "pt_mongolian_camp"),
      (assign, ":var3", reg0),
      (party_set_ai_behavior, ":var3", ai_bhvr_patrol_location),
      (party_set_ai_object, ":var3", ":var0"),
      (party_set_slot, ":var3", 5, ":var0"),
      (party_set_ai_patrol_radius, ":var3", 10),
      (party_set_slot, ":var3", 255, ":var0"),
      (party_set_slot, ":var0", 257, ":var3"),
      (party_set_faction, ":var3", ":var2"),
      (party_set_slot, ":var3", 10, "scn_village_mongol"),
      (party_set_slot, ":var3", 93, 1),
      (party_set_slot, ":var3", 19, "fac_culture_mongol"),
      (party_set_slot, ":var3", 256, 1),
      (party_set_slot, ":var3", 50, 50),
      (party_set_slot, ":var3", 0, 31),
      (party_set_icon, ":var3", "icon_camp"),
    (try_end),
    (try_begin),
      (assign, ":var0", "p_town_3_1"),
      (party_get_slot, ":var1", ":var0", 257),
      (le, ":var1", 0),
      (store_faction_of_party, ":var2", ":var0"),
      (set_spawn_radius, 5),
      (spawn_around_party, ":var0", "pt_mongolian_camp"),
      (assign, ":var3", reg0),
      (party_set_ai_behavior, ":var3", ai_bhvr_patrol_location),
      (party_set_ai_object, ":var3", ":var0"),
      (party_set_slot, ":var3", 5, ":var0"),
      (party_set_ai_patrol_radius, ":var3", 10),
      (party_set_slot, ":var3", 255, ":var0"),
      (party_set_slot, ":var0", 257, ":var3"),
      (party_set_faction, ":var3", ":var2"),
      (party_set_slot, ":var3", 10, "scn_village_mongol"),
      (party_set_slot, ":var3", 93, 1),
      (party_set_slot, ":var3", 19, "fac_culture_mongol"),
      (party_set_slot, ":var3", 256, 1),
      (party_set_slot, ":var3", 50, 50),
      (party_set_slot, ":var3", 0, 31),
      (party_set_icon, ":var3", "icon_camp"),
    (try_end),
  ]),

  (48, 0, 0,[
    (store_num_parties_of_template, ":var0", "pt_mongolian_camp"),
    (gt, ":var0", 0),
  ],
  [
    (try_for_parties, ":var0"),
      (party_get_template_id, ":var1", ":var0"),
      (eq, ":var1", "pt_mongolian_camp"),
      (party_is_active, ":var0"),
      (party_get_slot, ":var2", ":var0", 256),
      (try_begin),
        (eq, ":var2", 1),
        (store_random_in_range, ":var3", 0, 100),
        (le, ":var3", 50),
        (party_set_slot, ":var0", 256, 0),
        (party_set_icon, ":var0", "icon_khergit"),
        (party_get_slot, ":var4", ":var0", 255),
        (party_set_ai_behavior, ":var0", ai_bhvr_patrol_location),
        (party_set_ai_object, ":var0", ":var4"),
        (party_set_slot, ":var0", 5, ":var4"),
        (party_set_ai_patrol_radius, ":var0", 10),
      (else_try),
        (store_faction_of_party, ":var5", ":var0"),
        (party_get_slot, ":var4", ":var0", 255),
        (store_faction_of_party, ":var6", ":var4"),
        (eq, ":var6", ":var5"),
        (party_set_slot, ":var0", 256, 1),
        (party_set_icon, ":var0", "icon_camp"),
      (try_end),
      (try_begin),
        (store_party_size_wo_prisoners, ":var7", ":var0"),
        (le, ":var7", 100),
        (store_random_in_range, ":var3", 1, 101),
        (try_begin),
          (le, ":var3", 25),
          (assign, ":var8", "pt_kingdom_mongol_reinforcements_c"),
        (else_try),
          (ge, ":var3", 75),
          (assign, ":var8", "pt_kingdom_mongol_reinforcements_b"),
        (else_try),
          (assign, ":var8", "pt_kingdom_mongol_reinforcements_a"),
        (try_end),
        (party_add_template, ":var0", ":var8"),
        (party_get_slot, ":var9", ":var0", 93),
        (lt, ":var9", 6),
        (val_add, ":var9", 1),
        (party_set_slot, ":var0", 93, ":var9"),
      (try_end),
    (try_end),
  ]),

  (6, 0, 24,[
    (eq, "$g_town_visit_after_rest", 1),
  ],
  [
    (display_message, "@Resting at a walled fief. Morale increased by 5.", 0x50FF50),
    (party_get_morale, ":var0", "p_main_party"),
    (val_add, ":var0", 5),
    (party_set_morale, "p_main_party", ":var0"),
  ]),

  (0.05, 0, ti_once,[
    (map_free),
  ],
  [
    (try_begin),
      (faction_get_slot, ":var0", "$players_kingdom", 10),
      (try_begin),
        (eq, ":var0", "fac_culture_finnish"),
        (assign, "$g_player_know_culture_finnish", 1),
      (else_try),
        (eq, ":var0", "fac_culture_mazovian"),
        (assign, "$g_player_know_culture_mazovian", 1),
      (else_try),
        (eq, ":var0", "fac_culture_serbian"),
        (assign, "$g_player_know_culture_serbian", 1),
      (else_try),
        (eq, ":var0", "fac_culture_welsh"),
        (assign, "$g_player_know_culture_welsh", 1),
      (else_try),
        (eq, ":var0", "fac_culture_teutonic"),
        (assign, "$g_player_know_culture_teutonic", 1),
      (else_try),
        (eq, ":var0", "fac_culture_balkan"),
        (assign, "$g_player_know_culture_balkan", 1),
      (else_try),
        (eq, ":var0", "fac_culture_rus"),
        (assign, "$g_player_know_culture_rus", 1),
      (else_try),
        (eq, ":var0", "fac_culture_nordic"),
        (assign, "$g_player_know_culture_nordic", 1),
      (else_try),
        (eq, ":var0", "fac_culture_baltic"),
        (assign, "$g_player_know_culture_baltic", 1),
      (else_try),
        (eq, ":var0", "fac_culture_marinid"),
        (assign, "$g_player_know_culture_marinid", 1),
      (else_try),
        (eq, ":var0", "fac_culture_mamluke"),
        (assign, "$g_player_know_culture_mamluke", 1),
      (else_try),
        (eq, ":var0", "fac_culture_byzantium"),
        (assign, "$g_player_know_culture_byzantium", 1),
      (else_try),
        (eq, ":var0", "fac_culture_iberian"),
        (assign, "$g_player_know_culture_iberian", 1),
      (else_try),
        (eq, ":var0", "fac_culture_italian"),
        (assign, "$g_player_know_culture_italian", 1),
      (else_try),
        (eq, ":var0", "fac_culture_andalus"),
        (assign, "$g_player_know_culture_andalus", 1),
      (else_try),
        (eq, ":var0", "fac_culture_gaelic"),
        (assign, "$g_player_know_culture_gaelic", 1),
      (else_try),
        (eq, ":var0", "fac_culture_anatolian_christian"),
        (assign, "$g_player_know_culture_anatolian_christian", 1),
      (else_try),
        (eq, ":var0", "fac_culture_anatolian"),
        (assign, "$g_player_know_culture_anatolian", 1),
      (else_try),
        (eq, ":var0", "fac_culture_western"),
        (assign, "$g_player_know_culture_western", 1),
      (else_try),
        (eq, ":var0", "fac_culture_mongol"),
        (assign, "$g_player_know_culture_mongol", 1),
      (else_try),
        (eq, ":var0", "fac_culture_templar"),
        (assign, "$g_player_know_culture_templar", 1),
      (else_try),
        (eq, ":var0", "fac_culture_hospitaller"),
        (assign, "$g_player_know_culture_hospitaller", 1),
      (else_try),
        (eq, ":var0", "fac_culture_antioch"),
        (assign, "$g_player_know_culture_antiochian", 1),
      (else_try),
        (eq, ":var0", "fac_culture_tripoli"),
        (assign, "$g_player_know_culture_tripoli", 1),
      (else_try),
        (eq, ":var0", "fac_culture_ibelin"),
        (assign, "$g_player_know_culture_ibelin", 1),
      (else_try),
        (eq, ":var0", "fac_culture_jerusalem"),
        (assign, "$g_player_know_culture_jerusalem", 1),
      (else_try),
        (eq, ":var0", "fac_culture_player"),
        (assign, "$g_player_know_culture_player", 1),
      (try_end),
    (try_end),
    (faction_set_slot, "fac_kingdom_3", 102, 2),
    (faction_set_slot, "fac_kingdom_27", 102, 4),
    (faction_set_slot, "fac_kingdom_26", 102, 0),
  ]),

  (0, 0, 0,[
    (eq, "$freelancer_state", 1),
    (gt, "$enlisted_party", 0),
    (neg|party_is_active, "$enlisted_party"),
    (check_quest_active, "qst_freelancer_enlisted"),
  ],
  [
    (call_script, "script_freelancer_event_player_captured"),
    (assign, "$g_encountered_party", "$g_enemy_party"),
    (jump_to_menu, "mnu_captivity_start_wilderness"),
  ]),

  (0, 0, 0,[
    (eq, "$freelancer_state", 1),
    (check_quest_active, "qst_freelancer_enlisted"),
    (try_begin),
      (party_slot_ge, "p_freelancer_party_backup", 68, 1),
      (map_free),
      (party_set_slot, "p_freelancer_party_backup", 68, 0),
      (party_get_num_attached_parties, ":var0", "p_main_party"),
      (try_for_range_backwards, ":var1", 0, ":var0"),
        (party_get_attached_party_with_rank, ":var2", "p_main_party", ":var1"),
        (party_detach, ":var2"),
      (try_end),
    (try_end),
    (party_get_battle_opponent, ":var3", "$enlisted_party"),
    (gt, ":var3", 0),
    (store_troop_health, ":var4", "trp_player"),
    (ge, ":var4", 50),
  ],
  [
    (jump_to_menu, "mnu_world_map_soldier"),
  ]),

  (1, 0, 0,[
    (check_quest_active, "qst_freelancer_revolt"),
  ],
  [
    (quest_get_slot, ":var0", "qst_freelancer_revolt", 8),
    (try_begin),
      (quest_slot_eq, "qst_freelancer_revolt", 11, 0),
      (try_begin),
        (neg|party_is_active, "$enlisted_party"),
        (try_begin),
          (gt, ":var0", 0),
          (party_is_active, ":var0"),
          (party_detach, ":var0"),
          (quest_set_slot, "qst_freelancer_revolt", 11, 1),
        (else_try),
          (call_script, "script_finish_quest", "qst_freelancer_revolt", 100),
        (try_end),
      (else_try),
        (try_begin),
          (gt, ":var0", 0),
          (party_is_active, ":var0"),
          (party_detach, ":var0"),
          (remove_party, ":var0"),
        (try_end),
        (call_script, "script_fail_quest", "qst_freelancer_revolt"),
        (call_script, "script_end_quest", "qst_freelancer_revolt"),
      (try_end),
      (assign, "$enlisted_party", 0),
    (try_end),
    (quest_slot_ge, "qst_freelancer_revolt", 11, 1),
    (try_begin),
      (quest_slot_eq, "qst_freelancer_revolt", 11, 1),
      (store_skill_level, ":var1", "skl_leadership", "trp_player"),
      (store_skill_level, ":var2", "skl_persuasion", "trp_player"),
      (store_add, ":var3", ":var2", ":var1"),
      (val_add, ":var3", 10),
      (store_random_in_range, ":var4", 0, ":var3"),
      (try_begin),
        (is_between, ":var4", 0, 5),
        (call_script, "script_party_calculate_strength", "p_main_party", 0),
        (assign, ":var5", reg0),
        (call_script, "script_party_calculate_strength", ":var0", 0),
        (assign, ":var6", reg0),
        (ge, ":var6", ":var5"),
        (party_get_num_prisoner_stacks, ":var7", ":var0"),
        (try_for_range, ":var8", 0, ":var7"),
          (party_prisoner_stack_get_troop_id, ":var9", ":var0", ":var8"),
          (party_prisoner_stack_get_size, ":var10", ":var0", ":var8"),
          (party_remove_prisoners, ":var0", ":var9", ":var10"),
        (try_end),
        (quest_set_slot, "qst_freelancer_revolt", 11, 2),
        (dialog_box, "@The released prisoners were not be trusted and they are preparing to attack you!", "@Warning!"),
        (start_encounter, ":var0"),
        (change_screen_map),
      (else_try),
        (is_between, ":var4", 5, 10),
        (dialog_box, "@The released prisoners scattered as soon as the battle finished. You will not be seeing them again.", "@Notice!"),
        (remove_party, ":var0"),
        (call_script, "script_finish_quest", "qst_freelancer_revolt", 100),
        (quest_set_slot, "qst_freelancer_revolt", 11, 0),
      (else_try),
        (dialog_box, "@The released prisoners have remained loyal and will join your party", "@Notice!"),
        (call_script, "script_party_add_party", "p_main_party", ":var0"),
        (remove_party, ":var0"),
        (call_script, "script_finish_quest", "qst_freelancer_revolt", 100),
        (quest_set_slot, "qst_freelancer_revolt", 11, 0),
      (try_end),
    (else_try),
      (quest_slot_eq, "qst_freelancer_revolt", 11, 2),
      (try_begin),
        (neg|party_is_active, ":var0"),
        (neq, "$g_player_is_captive", 1),
        (call_script, "script_finish_quest", "qst_freelancer_revolt", 100),
      (else_try),
        (call_script, "script_fail_quest", "qst_freelancer_revolt"),
        (call_script, "script_end_quest", "qst_freelancer_revolt"),
      (try_end),
      (quest_set_slot, "qst_freelancer_revolt", 11, 0),
    (try_end),
  ]),

  (0, 0, 0,[
    (eq, "$freelancer_state", 1),
    (key_clicked, key_left_mouse_button),
    (set_fixed_point_multiplier, 1000),
    (mouse_get_position, pos0),
    (position_get_y, ":var0", pos0),
    (gt, ":var0", 50),
  ],
  [
    (jump_to_menu, "mnu_world_map_soldier"),
    (rest_for_hours_interactive, 9999, 4, 0),
  ]),

  (24, 0, 0,[
    (eq, "$freelancer_state", 2),
  ],
  [
    (try_for_range, ":var0", "qst_freelancer_enlisted", "qst_freelancer_end"),
      (check_quest_active, ":var0"),
      (quest_get_slot, ":var1", ":var0", 23),
      (ge, ":var1", 1),
      (val_sub, ":var1", 1),
      (try_begin),
        (eq, ":var1", 5),
        (str_store_troop_name, s13, "$enlisted_lord"),
        (dialog_box, "@You have 5 days remaining in your leave from the party of {s13} before you will be declared a deserter.", "@Notice!"),
      (else_try),
        (is_between, ":var1", 2, 5),
        (assign, reg0, ":var1"),
        (display_message, "@You have {reg0} days left until you are declared as a deserter!"),
      (else_try),
        (eq, ":var1", 1),
        (str_store_troop_name, s13, "$enlisted_lord"),
        (dialog_box, "@You must check in with your commander {s13} immediately or you will be declared a deserter!", "@Warning!"),
      (try_end),
    (try_end),
  ]),

]